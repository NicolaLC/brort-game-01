{"version":3,"sources":["js/constants.js","js/main.js"],"names":["DECK_CARDS","EGameResult","Win","Lose","Tie","consoleContainer","document","getElementById","playerDeck","playerCards","opponentDeck","opponentCards","writeToConsole","message","innerHTML","clearConsole","intro","addEventListener","onKeyHandler","e","keyCode","removeEventListener","startGame","getScore","deck","result","forEach","card","cardScore","getRandomDeck","length","push","getRandomCard","getStarterDeck","availableCards","filter","c","indexOf","random","cards","drawGameBoard","bProceed","join","drawAnotherCard","stopDrawing","playerScore","opponentScore","gameResult"],"mappings":"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","file":"main.de8345a7.js","sourceRoot":"..","sourcesContent":["const DECK_CARDS = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"J\", \"Q\", \"K\", \"10\"];\nconst EGameResult = {\n  Win: 0,\n  Lose: 1,\n  Tie: 2\n}\n\n\nexport {DECK_CARDS, EGameResult};\n","import {DECK_CARDS, EGameResult} from \"./constants\";\n\nconst consoleContainer = document.getElementById('console');\n\nlet playerDeck = [];\nlet playerCards = [];\n\nlet opponentDeck = [];\nlet opponentCards = [];\n\nconst writeToConsole = (message) => {\n  consoleContainer.innerHTML += `${message ? message : \"\"}</br>`;\n}\n\nconst clearConsole = () => {\n  consoleContainer.innerHTML = \"\";\n}\n\nconst intro = () => {\n\n  writeToConsole(\"<b>Welcome player</b>\");\n  writeToConsole();\n  writeToConsole(\"Press <b>[SPACEBAR]</b> to start a new game...\");\n\n  const onKeyHandler = (e) => {\n    if (e.keyCode === 32) {\n      document.removeEventListener('keydown', onKeyHandler);\n      clearConsole();\n      startGame();\n    }\n  }\n\n  document.addEventListener('keydown', onKeyHandler);\n}\n\nconst getScore = (deck) => {\n  let result = 0;\n\n  deck.forEach(card => {\n    let cardScore = card.getScore();\n    if(cardScore === 11 && result + cardScore > 21) {\n      cardScore = 1;\n    }\n\n    result += cardScore;\n  });\n\n  return result;\n}\n\nconst getRandomDeck = () => {\n  const deck = [];\n\n  while (deck.length < 3) {\n    deck.push(getRandomCard(deck, DECK_CARDS));\n  }\n\n  return deck;\n}\n\nconst getStarterDeck = () => {\n  const deck = getRandomDeck(playerCards);\n\n  if (getScore(deck) !== 21) {\n    return getStarterDeck();\n  }\n\n  while (playerCards.length < 2) {\n    const availableCards = deck.filter(c => playerCards.indexOf(c) < 0);\n    playerCards.push(availableCards.random());\n  }\n\n  return deck;\n}\n\nconst getRandomCard = (deck, cards) => {\n  if(deck.length === 0) {\n    return DECK_CARDS.random();\n  }\n\n  let availableCards = cards.filter(c => deck.indexOf(c) < 0);\n\n  if(availableCards.length === 0) {\n    availableCards = DECK_CARDS;\n  }\n\n  return availableCards.random();\n}\n\nconst drawGameBoard = (bProceed = true) => {\n  clearConsole();\n\n  writeToConsole(`<b class=\"player-log\">Your deck</b>: ${playerDeck.join(\", \")}`);\n  writeToConsole();\n  writeToConsole(`<b class=\"player-log\">Your cards</b>: ${playerCards.join(\", \")}`);\n  writeToConsole(`<b class=\"player-log\">Your score</b>: ${getScore(playerCards)}`);\n\n  writeToConsole();\n  writeToConsole(`<b class=\"opponent-log\">Opponent cards</b>: ${opponentCards.join(\", \")}`);\n  writeToConsole(`<b class=\"opponent-log\">Opponent score</b>: ${getScore(opponentCards)}`);\n\n  writeToConsole();\n\n  if (bProceed) {\n    writeToConsole(\"Press <b>[SPACEBAR]</b> to draw, or <b>[ESC]</b> to stop.\");\n\n    const onKeyHandler = (e) => {\n      if (e.keyCode === 32) {\n        document.removeEventListener('keydown', onKeyHandler);\n        clearConsole();\n        drawAnotherCard();\n      }\n\n      if (e.keyCode === 27) {\n        document.removeEventListener('keydown', onKeyHandler);\n        clearConsole();\n        stopDrawing();\n      }\n    }\n\n    document.addEventListener('keydown', onKeyHandler);\n  }\n}\n\nconst startGame = () => {\n  playerDeck = getStarterDeck();\n\n  opponentDeck = getRandomDeck();\n  opponentCards = [opponentDeck.random()];\n\n  drawGameBoard();\n}\n\nconst drawAnotherCard = () => {\n  if (playerCards.length === playerDeck.length || playerCards.length >= 5) {\n    stopDrawing();\n    return;\n  }\n\n  playerCards.push(getRandomCard(playerDeck, playerCards));\n  opponentCards.push(getRandomCard(opponentDeck, opponentCards));\n\n  drawGameBoard();\n}\n\nconst stopDrawing = () => {\n  opponentCards.push(opponentDeck.random());\n  drawGameBoard(false);\n\n  let playerScore = getScore(playerCards);\n  let opponentScore = getScore(opponentCards);\n\n  let gameResult = EGameResult.Tie;\n\n  if (playerScore !== opponentScore)\n  {\n    if (playerScore === 21) {\n      gameResult = EGameResult.Win;\n    }\n    else if (playerScore < 21) {\n      if (opponentScore < playerScore) {\n        gameResult = EGameResult.Win;\n      } else if(opponentScore < 21) {\n        gameResult = EGameResult.Lose;\n      }\n    } else {\n      if (opponentScore > playerScore) {\n        gameResult = EGameResult.Win;\n      } else if(opponentScore <= 21) {\n        gameResult = EGameResult.Lose;\n      }\n    }\n  }\n\n  switch (gameResult) {\n    case EGameResult.Win:\n      writeToConsole(`<b>Player Wins</b>`);\n      break;\n    case EGameResult.Lose:\n      writeToConsole(`<b>Opponent Wins</b>`);\n      break;\n    case EGameResult.Tie:\n      writeToConsole(`<b>Tie</b>`);\n      break;\n  }\n\n  writeToConsole(\"Press <b>[SPACEBAR]</b> to proceed.\");\n\n  const onKeyHandler = (e) => {\n    if (e.keyCode === 32) {\n      document.removeEventListener('keydown', onKeyHandler);\n      clearConsole();\n    }\n  }\n\n  document.addEventListener('keydown', onKeyHandler);\n}\n\n(\n  () => {\n    intro();\n  }\n)();\n"]}