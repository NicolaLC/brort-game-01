{"version":3,"sources":["js/constants.js","js/main.js"],"names":["DECK_CARDS","EGameResult","Win","Lose","Tie","consoleContainer","document","getElementById","playerDeck","playerCards","opponentDeck","opponentCards","playerWins","opponentWins","currentLevel","maxLevel","writeToConsole","message","innerHTML","clearConsole","intro","addEventListener","onKeyHandler","e","keyCode","removeEventListener","startGame","getScore","deck","result","forEach","card","cardScore","getRandomDeck","length","push","getRandomCard","getStarterDeck","random","cards","availableCards","filter","c","indexOf","drawGameBoard","bProceed","join","drawAnotherCard","stopDrawing","clearCards","playerScore","opponentScore","gameResult","showEndGame","newLevel","window","location","reload","confirm","chooseRandomCard"],"mappings":"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","file":"main.23b21903.js","sourceRoot":"..","sourcesContent":["const DECK_CARDS = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"J\", \"Q\", \"K\", \"10\"];\nconst EGameResult = {\n  Win: 0,\n  Lose: 1,\n  Tie: 2\n}\n\n\nexport {DECK_CARDS, EGameResult};\n","import {DECK_CARDS, EGameResult} from \"./constants\";\n\nconst consoleContainer = document.getElementById('console');\n\nlet playerDeck = [];\nlet playerCards = [];\n\nlet opponentDeck = [];\nlet opponentCards = [];\n\nlet playerWins = 0;\nlet opponentWins = 0;\n\nlet currentLevel = 1;\nconst maxLevel = 21;\n\nconst writeToConsole = (message) => {\n  consoleContainer.innerHTML += `${message ? message : \"\"}</br>`;\n}\n\nconst clearConsole = () => {\n  consoleContainer.innerHTML = \"\";\n}\n\nconst intro = () => {\n\n  writeToConsole(\"<b>Welcome player</b>\");\n  writeToConsole();\n  writeToConsole(\"Press <b>[SPACEBAR]</b> to start a new game...\");\n\n  const onKeyHandler = (e) => {\n    if (e.keyCode === 32) {\n      document.removeEventListener('keydown', onKeyHandler);\n      clearConsole();\n      startGame();\n    }\n  }\n\n  document.addEventListener('keydown', onKeyHandler);\n}\n\nconst getScore = (deck) => {\n  let result = 0;\n\n  deck.forEach(card => {\n    let cardScore = card.getScore();\n    if(cardScore === 11 && result + cardScore > 21) {\n      cardScore = 1;\n    }\n\n    result += cardScore;\n  });\n\n  return result;\n}\n\nconst getRandomDeck = () => {\n  const deck = [];\n\n  while (deck.length < 3) {\n    deck.push(getRandomCard(deck, DECK_CARDS));\n  }\n\n  return deck;\n}\n\nconst getStarterDeck = () => {\n  const deck = getRandomDeck(playerCards);\n\n  if (getScore(deck) !== 21) {\n    return getStarterDeck();\n  }\n\n  playerCards.push(deck.random());\n\n  return deck;\n}\n\nconst getRandomCard = (deck, cards) => {\n  if(deck.length === 0) {\n    return DECK_CARDS.random();\n  }\n\n  let availableCards = deck.filter(c => cards.indexOf(c) < 0);\n\n  if(availableCards.length === 0) {\n    availableCards = DECK_CARDS;\n  }\n\n  return availableCards.random();\n}\n\nconst drawGameBoard = (bProceed = true) => {\n  clearConsole();\n\n  writeToConsole(`<h1>Level ${currentLevel} of ${maxLevel}</h1>`);\n  writeToConsole();\n\n  writeToConsole(`<h2>Player: ${playerWins} Opponent: ${opponentWins}</h2>`);\n  writeToConsole();\n\n  writeToConsole(`<b class=\"player-log\">Your deck</b>: ${playerDeck.join(\", \")}`);\n  writeToConsole();\n  writeToConsole(`<b class=\"player-log\">Your cards</b>: ${playerCards.join(\", \")}`);\n  writeToConsole(`<b class=\"player-log\">Your score</b>: ${getScore(playerCards)}`);\n\n  writeToConsole();\n  writeToConsole(`<b class=\"opponent-log\">Opponent cards</b>: ${opponentCards.join(\", \")}`);\n  writeToConsole(`<b class=\"opponent-log\">Opponent score</b>: ${getScore(opponentCards)}`);\n\n  writeToConsole();\n\n  if (bProceed) {\n    writeToConsole(\"Press <b>[SPACEBAR]</b> to draw, or <b>[ESC]</b> to stop.\");\n\n    const onKeyHandler = (e) => {\n      if (e.keyCode === 32) {\n        document.removeEventListener('keydown', onKeyHandler);\n        clearConsole();\n        drawAnotherCard();\n      }\n\n      if (e.keyCode === 27) {\n        document.removeEventListener('keydown', onKeyHandler);\n        clearConsole();\n        stopDrawing();\n      }\n    }\n\n    document.addEventListener('keydown', onKeyHandler);\n  }\n}\n\nconst startGame = () => {\n  playerDeck = getStarterDeck();\n\n  opponentDeck = getRandomDeck();\n  opponentCards = [opponentDeck.random()];\n\n  drawGameBoard();\n}\n\nconst drawAnotherCard = () => {\n  if (playerCards.length === playerDeck.length || playerCards.length >= 5) {\n    stopDrawing();\n    return;\n  }\n\n  playerCards.push(getRandomCard(playerDeck, playerCards));\n  opponentCards.push(getRandomCard(opponentDeck, opponentCards));\n\n  drawGameBoard();\n}\n\nconst clearCards = () => {\n  playerCards = [];\n  opponentCards = [];\n}\n\nconst stopDrawing = () => {\n  if (opponentCards.length < opponentDeck.length) {\n    opponentCards.push(opponentDeck.random());\n  }\n  drawGameBoard(false);\n\n  let playerScore = getScore(playerCards);\n  let opponentScore = getScore(opponentCards);\n\n  clearCards();\n\n  let gameResult = EGameResult.Tie;\n\n  if (playerScore !== opponentScore)\n  {\n    if (playerScore === 21) {\n      gameResult = EGameResult.Win;\n    }\n    else if (playerScore < 21) {\n      if (opponentScore < playerScore) {\n        gameResult = EGameResult.Win;\n      } else if(opponentScore < 21) {\n        gameResult = EGameResult.Lose;\n      } else {\n        gameResult = EGameResult.Win;\n      }\n    } else {\n      if (opponentScore > playerScore) {\n        gameResult = EGameResult.Win;\n      } else { // playerScore > opponentScore || opponentScore <= 21\n        gameResult = EGameResult.Lose;\n      }\n    }\n  }\n\n  switch (gameResult) {\n    case EGameResult.Win:\n      playerWins++;\n      writeToConsole(`<b>Player Wins</b>`);\n      break;\n    case EGameResult.Lose:\n      opponentWins++;\n      writeToConsole(`<b>Opponent Wins</b>`);\n      break;\n    case EGameResult.Tie:\n      writeToConsole(`<b>Tie</b>`);\n      break;\n  }\n\n  if (playerWins < 2 && opponentWins < 2) {\n    writeToConsole(\"Press <b>[SPACEBAR]</b> to proceed.\");\n\n    const onKeyHandler = (e) => {\n      if (e.keyCode === 32) {\n        document.removeEventListener('keydown', onKeyHandler);\n        clearConsole();\n        drawAnotherCard();\n      }\n    }\n\n    document.addEventListener('keydown', onKeyHandler);\n  } else {\n    showEndGame();\n  }\n}\n\nconst showEndGame = () => {\n  if (playerWins === 2) {\n    writeToConsole(\"Congratulations, you win this match!\");\n    writeToConsole(\"Press <b>[SPACEBAR]</b> to proceed.\");\n  } else {\n    writeToConsole(\"Oh no, you lose this match!\");\n    writeToConsole(\"Press <b>[SPACEBAR]</b> to restart.\");\n  }\n\n  const onKeyHandler = (e) => {\n    if (e.keyCode === 32) {\n      document.removeEventListener('keydown', onKeyHandler);\n      if (playerWins === 2) {\n        newLevel();\n      } else {\n        window.location.reload();\n      }\n    }\n  }\n\n  document.addEventListener('keydown', onKeyHandler);\n}\n\nconst newLevel = () => {\n  currentLevel++;\n\n  if (currentLevel > maxLevel) {\n    if (confirm(\"E bravo nabbetto, ce l'hai fatta hai vinto!\")) {\n      window.location.reload();\n    } else {\n      window.location.reload();\n    }\n  } else {\n    playerWins = 0;\n    opponentWins = 0;\n    clearConsole();\n    chooseRandomCard();\n  }\n}\n\nconst chooseRandomCard = () => {\n  const cards = [DECK_CARDS.random(), DECK_CARDS.random()];\n\n  writeToConsole(`Choose a card to add to your deck: <b>[1] ${cards[0]}</b> <b>[2] ${cards[1]}</b>`);\n\n  const onKeyHandler = (e) => {\n    if (e.keyCode === 49) {\n      document.removeEventListener('keydown', onKeyHandler);\n      playerDeck.push(cards[0]);\n      clearConsole();\n      drawAnotherCard();\n    }\n\n    if (e.keyCode === 50) {\n      document.removeEventListener('keydown', onKeyHandler);\n      playerDeck.push(cards[1]);\n      clearConsole();\n      drawAnotherCard();\n    }\n  }\n\n  document.addEventListener('keydown', onKeyHandler);\n}\n\n(\n  () => {\n    intro();\n  }\n)();\n"]}