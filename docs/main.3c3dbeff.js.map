{"version":3,"sources":["js/constants.js","js/game/graphics.js","js/game/logic.js","js/main.js"],"names":["DECK_CARDS","EGameResult","Win","Lose","Tie","modal","opponentSide","document","getElementById","opponentDeckCells","querySelectorAll","playerSide","playerCardsCells","playerDeckContainer","querySelector","log","render","renderOpponent","renderPlayer","innerHTML","playerTurn","clear","forEach","element","close","card","index","result","bUsed","playerCards","indexOf","showModal","title","content","proceedLabel","cancelLabel","onProceed","onCancel","html","newModal","createElement","classList","add","body","appendChild","actions","cancelButton","addEventListener","proceedButton","consoleContainer","playerDeck","opponentDeck","opponentCards","playerWins","opponentWins","currentLevel","maxLevel","writeToConsole","message","clearConsole","intro","startGame","getScore","deck","cardScore","getRandomDeck","length","push","getRandomCard","getStarterDeck","random","getRandomCardFromDeck","cards","availableCards","filter","c","waitForPlayerActions","onKeyHandler","e","keyCode","preventDefault","stopImmediatePropagation","removeEventListener","drawAnotherCard","stopDrawing","drawGameBoard","join","setTimeout","clearCards","playerScore","opponentScore","gameResult","modalContent","turnEnded","newLevel","window","location","reload","confirm","chooseRandomCard"],"mappings":"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","file":"main.3c3dbeff.js","sourceRoot":"..","sourcesContent":["const DECK_CARDS = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"J\", \"Q\", \"K\", \"10\"];\nconst EGameResult = {\n  Win: 0,\n  Lose: 1,\n  Tie: 2\n}\n\n\nexport {DECK_CARDS, EGameResult};\n","import {opponentCards, playerCards, playerDeck, playerTurn} from \"./logic\";\n\nconst opponentSide = document.getElementById(\"opponent-side\");\nconst opponentDeckCells = opponentSide.querySelectorAll(\".deck-grid-cell\");\n\nconst playerSide = document.getElementById(\"player-side\");\nconst playerCardsCells = playerSide.querySelectorAll(\".deck-grid-cell\");\nconst playerDeckContainer = playerSide.querySelector(\".player-deck\");\n\nconst log = document.querySelector(\".log\");\n\nlet modal;\n\nconst render = () => {\n\trenderOpponent();\n\trenderPlayer();\n\n\tlog.innerHTML = playerTurn ? `Your turn! <span>Press <b>[SPACE]</b> to draw, <b>[ESC]</b> to exit.</span>` : \"Opponent Turn!\";\n}\n\nconst clear = () => {\n\topponentDeckCells.forEach(element => {\n\t\telement.innerHTML = \"\";\n\t});\n\n\tplayerCardsCells.forEach(element => {\n\t\telement.innerHTML = \"\";\n\t});\n\n\tplayerDeckContainer.innerHTML = \"\";\n\tif (modal != null) {\n\t\tmodal.close();\n\t}\n\n\tlog.innerHTML= \"\";\n}\n\nconst renderOpponent = () => {\n\topponentCards.forEach((card, index) => {\n\t\topponentDeckCells[index].innerHTML = `<div class=\"card\">${card}</div>`;\n\t});\n}\n\nconst renderPlayer = () => {\n\tplayerCards.forEach((card, index) => {\n\t\tplayerCardsCells[index].innerHTML = `<div class=\"card\">${card}</div>`;\n\t});\n\n\tlet result = \"\";\n\tplayerDeck.forEach(card => {\n\t\tconst bUsed = playerCards.indexOf(card) > -1;\n\t\tresult += `<div class=\"card ${bUsed ? \"used\" : \"\"}\">${card}</div>`;\n\t});\n\n\tplayerDeckContainer.innerHTML = result;\n}\n\nconst showModal = (title, content, proceedLabel, cancelLabel, onProceed, onCancel) => {\n\tconst html = `\n\t\t\t<div class=\"dialog-title\">\n\t\t\t\t${title}\n\t\t\t</div>\n\t\t\t<div class=\"dialog-content\">\n\t\t\t\t${content}\n\t\t\t</div>\n\t\t\t<div class=\"dialog-actions\">\n\t\t\t</div>\n\t\t`;\n\n\tif (modal == null) {\n\t\tconst newModal = document.createElement(\"dialog\");\n\t\tnewModal.classList.add(\"modal\");\n\t\tnewModal.innerHTML = html;\n\n\t\tmodal = document.body.appendChild(newModal);\n\t} else {\n\t\tmodal.innerHTML = html;\n\t}\n\n\tconst actions = modal.querySelector(\".dialog-actions\");\n\n\tif (cancelLabel) {\n\t\tconst cancelButton = document.createElement(\"button\");\n\t\tcancelButton.innerHTML = cancelLabel;\n\t\tcancelButton.addEventListener(\"click\", () => {\n\t\t\tmodal.close();\n\t\t\tif (onCancel)\n\t\t\t{\n\t\t\t\tonCancel();\n\t\t\t}\n\t\t});\n\t\tactions.appendChild(cancelButton);\n\t}\n\n\n\tconst proceedButton = document.createElement(\"button\");\n\tproceedButton.innerHTML = proceedLabel;\n\tproceedButton.addEventListener(\"click\", () => {\n\t\tmodal.close();\n\t\tif (onProceed)\n\t\t{\n\t\t\tonProceed();\n\t\t}\n\t});\n\n\tactions.appendChild(proceedButton);\n\tmodal.showModal();\n}\n\nexport {render, clear, showModal};","import {DECK_CARDS, EGameResult} from \"../constants\";\nimport {clear, render, showModal} from \"./graphics\";\n\nconst consoleContainer = document.getElementById('console');\n\nlet playerDeck = [];\nlet playerCards = [];\n\nlet opponentDeck = [];\nlet opponentCards = [];\n\nlet playerWins = 0;\nlet opponentWins = 0;\n\nlet currentLevel = 1;\nconst maxLevel = 21;\n\nlet playerTurn = true;\n\nconst writeToConsole = (message) => {\n\tconsoleContainer.innerHTML += `${message ? message : \"\"}</br>`;\n\trender();\n}\n\nconst clearConsole = () => {\n\tconsoleContainer.innerHTML = \"\";\n\tclear();\n}\n\nconst intro = () => {\n\tclearConsole();\n\tstartGame();\n}\n\nconst getScore = (deck) => {\n\tlet result = 0;\n\n\tdeck.forEach(card => {\n\t\tlet cardScore = card.getScore();\n\t\tif(cardScore === 11 && result + cardScore > 21) {\n\t\t\tcardScore = 1;\n\t\t}\n\n\t\tresult += cardScore;\n\t});\n\n\treturn result;\n}\n\nconst getRandomDeck = () => {\n\tconst deck = [];\n\n\twhile (deck.length < 3) {\n\t\tdeck.push(getRandomCard(deck, DECK_CARDS));\n\t}\n\n\treturn deck;\n}\n\nconst getStarterDeck = () => {\n\tconst deck = getRandomDeck(playerCards);\n\n\tif (getScore(deck) !== 21) {\n\t\treturn getStarterDeck();\n\t}\n\n\tplayerCards.push(deck.random());\n\tplayerCards.push(getRandomCardFromDeck(deck, playerCards));\n\n\treturn deck;\n}\n\nconst getRandomCard = (deck, cards) => {\n\tif(deck.length === 0) {\n\t\treturn DECK_CARDS.random();\n\t}\n\n\tlet availableCards = cards.filter(c => deck.indexOf(c) < 0);\n\n\tif(availableCards.length === 0) {\n\t\tavailableCards = DECK_CARDS;\n\t}\n\n\treturn availableCards.random();\n}\n\nconst getRandomCardFromDeck = (deck, cards) => {\n\tif(deck.length === 0) {\n\t\treturn DECK_CARDS.random();\n\t}\n\n\tlet availableCards = deck.filter(c => cards.indexOf(c) < 0);\n\n\tif(availableCards.length === 0) {\n\t\tavailableCards = DECK_CARDS;\n\t}\n\n\treturn availableCards.random();\n}\n\nconst waitForPlayerActions = () => {\n\tplayerTurn = true;\n\n\tconst onKeyHandler = (e) => {\n\t\tif (e.keyCode === 32) {\n\t\t\te.preventDefault();\n\t\t\te.stopImmediatePropagation();\n\t\t\tdocument.removeEventListener('keydown', onKeyHandler);\n\t\t\tclearConsole();\n\t\t\tplayerTurn = false;\n\t\t\tdrawAnotherCard();\n\t\t}\n\n\t\tif (e.keyCode === 27) {\n\t\t\te.preventDefault();\n\t\t\te.stopImmediatePropagation();\n\t\t\tdocument.removeEventListener('keydown', onKeyHandler);\n\t\t\tclearConsole();\n\t\t\tplayerTurn = false;\n\t\t\tstopDrawing();\n\t\t}\n\t}\n\n\tdocument.addEventListener('keydown', onKeyHandler);\n}\n\nconst drawGameBoard = (bProceed = true) => {\n\tclearConsole();\n\n\twriteToConsole(`<h1>Level ${currentLevel} of ${maxLevel}</h1>`);\n\twriteToConsole();\n\n\twriteToConsole(`<h2>Player: ${playerWins} Opponent: ${opponentWins}</h2>`);\n\twriteToConsole();\n\n\twriteToConsole(`<b class=\"player-log\">Your deck</b>: ${playerDeck.join(\", \")}`);\n\twriteToConsole();\n\twriteToConsole(`<b class=\"player-log\">Your cards</b>: ${playerCards.join(\", \")}`);\n\twriteToConsole(`<b class=\"player-log\">Your score</b>: ${getScore(playerCards)}`);\n\n\twriteToConsole();\n\twriteToConsole(`<b class=\"opponent-log\">Opponent cards</b>: ${opponentCards.join(\", \")}`);\n\twriteToConsole(`<b class=\"opponent-log\">Opponent score</b>: ${getScore(opponentCards)}`);\n\n\twriteToConsole();\n}\n\nconst startGame = () => {\n\tplayerDeck = getStarterDeck();\n\n\topponentDeck = getRandomDeck();\n\topponentCards = [opponentDeck.random()];\n\n\twaitForPlayerActions();\n\tdrawGameBoard();\n}\n\nconst drawAnotherCard = () => {\n\tif (playerCards.length === playerDeck.length || playerCards.length >= 5) {\n\t\tstopDrawing();\n\t\treturn;\n\t}\n\n\tplayerCards.push(getRandomCardFromDeck(playerDeck, playerCards));\n\n\tif (playerCards.length === 1) {\n\t\tplayerCards.push(getRandomCardFromDeck(playerDeck, playerCards));\n\t}\n\n\tdrawGameBoard();\n\n\tsetTimeout(() => {\n\t\topponentCards.push(DECK_CARDS.random());\n\t\twaitForPlayerActions();\n\t\tdrawGameBoard();\n\t}, 2000);\n}\n\nconst clearCards = () => {\n\tplayerCards = [];\n\topponentCards = [];\n}\n\nconst stopDrawing = () => {\n\twhile (opponentCards.length < playerCards.length) {\n\t\topponentCards.push(DECK_CARDS.random());\n\t}\n\n\tdrawGameBoard(false);\n\n\tsetTimeout(() => {\n\t\tlet playerScore = getScore(playerCards);\n\t\tlet opponentScore = getScore(opponentCards);\n\n\t\tclearCards();\n\n\t\tlet gameResult = EGameResult.Tie;\n\n\t\tif (playerScore !== opponentScore)\n\t\t{\n\t\t\tif (playerScore === 21) {\n\t\t\t\tgameResult = EGameResult.Win;\n\t\t\t}\n\t\t\telse if (playerScore < 21) {\n\t\t\t\tif (opponentScore < playerScore) {\n\t\t\t\t\tgameResult = EGameResult.Win;\n\t\t\t\t} else if(opponentScore < 21) {\n\t\t\t\t\tgameResult = EGameResult.Lose;\n\t\t\t\t} else {\n\t\t\t\t\tgameResult = EGameResult.Win;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (opponentScore > playerScore) {\n\t\t\t\t\tgameResult = EGameResult.Win;\n\t\t\t\t} else { // playerScore > opponentScore || opponentScore <= 21\n\t\t\t\t\tgameResult = EGameResult.Lose;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet modalContent = \"\";\n\t\tswitch (gameResult) {\n\t\t\tcase EGameResult.Win:\n\t\t\t\tplayerWins++;\n\t\t\t\tmodalContent = \"You Win!\";\n\t\t\t\tbreak;\n\t\t\tcase EGameResult.Lose:\n\t\t\t\topponentWins++;\n\t\t\t\tmodalContent = \"You Lose!\";\n\t\t\t\tbreak;\n\t\t\tcase EGameResult.Tie:\n\t\t\t\tmodalContent = \"Tie!\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tshowModal(\"Turn ended.\", modalContent, \"[<b>SPACEBAR</b>] continue.\", \"\", () => {\n\t\t\tif (playerWins < 2 && opponentWins < 2) {\n\t\t\t\tclearConsole();\n\t\t\t\tdrawAnotherCard();\n\t\t\t} else {\n\t\t\t\tturnEnded();\n\t\t\t}\n\t\t});\n\t}, 2000);\n}\n\nconst turnEnded = () => {\n\tif (playerWins === 2) {\n\t\tnewLevel();\n\t} else {\n\t\twindow.location.reload();\n\t}\n}\n\nconst newLevel = () => {\n\tcurrentLevel++;\n\n\tif (currentLevel > maxLevel) {\n\t\tif (confirm(\"E bravo nabbetto, ce l'hai fatta hai vinto!\")) {\n\t\t\twindow.location.reload();\n\t\t} else {\n\t\t\twindow.location.reload();\n\t\t}\n\t} else {\n\t\tplayerWins = 0;\n\t\topponentWins = 0;\n\t\tclearConsole();\n\t\tchooseRandomCard();\n\t}\n}\n\nconst chooseRandomCard = () => {\n\tconst cards = [DECK_CARDS.random(), DECK_CARDS.random()];\n\n\tshowModal(\n\t\t\"Choose a new card.\",\n\t\t`Choose a card to add to your deck:`,\n\t\t`[2] <b>${cards[1]}</b>`, `[1] <b>${cards[0]}</b>`,\n\t\t() => {\n\t\t\tplayerDeck.push(cards[1]);\n\t\t\tclearConsole();\n\t\t\tdrawAnotherCard();\n\t\t},\n\t\t() => {\n\t\t\tplayerDeck.push(cards[0]);\n\t\t\tclearConsole();\n\t\t\tdrawAnotherCard();\n\t\t}\n\t);\n\n\tconst onKeyHandler = (e) => {\n\t\tif (e.keyCode === 49) {\n\t\t\tdocument.removeEventListener('keydown', onKeyHandler);\n\t\t\tplayerDeck.push(cards[0]);\n\t\t\tclearConsole();\n\t\t\tdrawAnotherCard();\n\t\t}\n\n\t\tif (e.keyCode === 50) {\n\t\t\tdocument.removeEventListener('keydown', onKeyHandler);\n\t\t\tplayerDeck.push(cards[1]);\n\t\t\tclearConsole();\n\t\t\tdrawAnotherCard();\n\t\t}\n\t}\n\n\tdocument.addEventListener('keydown', onKeyHandler);\n}\n\nexport {intro, playerCards, opponentCards, playerDeck, playerTurn};\n","import {intro} from \"./game/logic\";\n\n(() => {\n\tintro();\n})();"]}